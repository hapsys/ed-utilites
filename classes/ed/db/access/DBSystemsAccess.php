<?php
/**
 *  Autogenerated class
 */
 
namespace ed\db\access;

use c3s\db\intruders\SQLIntruder;
use c3s\db\access\BaseAccess;

use ed\db\beans\DBSystemsBean;
use ed\db\vectors\DBSystemsVector;

class DBSystemsAccess extends BaseAccess {

	/**
	 * Enter description here ...
	 * @var DBSystemsAccess
	 */
	protected  static $__instance = null;

	/**
	 * @return DBSystemsAccess
	 */
	public static function getInstance() {
		if (self::$__instance == null) {
			$classname = __CLASS__;
			self::$__instance = new $classname();
		}
		return self::$__instance;
	}



	protected function __construct() {
		$this->con_name = "default";
		$this->tablename = "systems";
	}

	
	public function insert(DBSystemsBean $bean) {
		
		$columns = array();
		$columns["population"] = $bean->getPopulation();
		$columns["faction"] = $bean->getFaction();
		$columns["power_state"] = $bean->getPowerState();
		$columns["security"] = $bean->getSecurity();
		$columns["state"] = $bean->getState();
		$columns["updated_at"] = $bean->getUpdatedAt();
		$columns["allegiance"] = $bean->getAllegiance();
		$columns["power"] = $bean->getPower();
		$columns["name"] = $bean->getName();
		$columns["primary_economy"] = $bean->getPrimaryEconomy();
		$columns["x"] = $bean->getX();
		$columns["y"] = $bean->getY();
		$columns["needs_permit"] = $bean->getNeedsPermit();
		$columns["government"] = $bean->getGovernment();
		$columns["simbad_ref"] = $bean->getSimbadRef();
		$columns["z"] = $bean->getZ();
		$columns["system_id"] = $bean->getSystemId();
		
		$res = $this->getConnection()->insertRow($this->tablename, $columns);
		$bean->setAutoincrementField($res);
		return $res;
	}

	
	/**
	 * @param SQLIntruder $intruder
	 * @return DBSystemsVector
	 */
	public function getTableRecords(SQLIntruder $intruder = null) {

		$result = $this->_getTableRecords($intruder);

		$ret = null;
		if ($result) {
			$ret = new DBSystemsVector();
			foreach ($result as $res) {
				$bean = new DBSystemsBean();
				$bean->fillBean($res);
				
				$ret[] = $bean;
			}
		}
		return $ret;
	}

	
	/**
	 *
	 * @return DBSystemsBean
	 */
	public function getByPrimaryKey($paramSystemId)  {
		$ret = null;
		$intruder = new SQLIntruder();
		
		$sql = "SELECT t.* ".$intruder->getRecordQuery()." FROM ".$this->tablename." as t ".$intruder->getFromQuery()." WHERE 1=1 AND  system_id= ?  ".$intruder->getWhereQuery()." ";
		if ($intruder->getOrderQuery()) {
			$sql .= $intruder->getOrderQuery();
		} else {
			
		}
		if ($intruder->getLimitQuery()) {
			$sql .= $intruder->getLimitQuery();
		} else {
			$sql .= " LIMIT 1 ";
		}
		$result = $this->getConnection()->getTable($sql, array($paramSystemId));
		if ($result) {
			$ret = new DBSystemsBean();
			
			$ret->fillBean($result[0]);
			
		}
		return $ret;
	}
	
	/**
	 *
	 * @return int
	 */
	public function updateByPrimaryKey(DBSystemsBean $bean, $paramSystemId) {
		
		$keys = array();
		 
		$keys["system_id"] =  $paramSystemId;
		 
		return $this->getConnection()->updateRow("systems", $bean->__toArray(false), $keys);
	}
	
}